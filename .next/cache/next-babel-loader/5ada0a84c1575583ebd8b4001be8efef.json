{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunMiddleware from 'redux-thunk'; // ステートの初期値\n\nconst initial = {\n  message: 'START',\n  const: 0\n}; // レデューサー\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count - 1\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} // initStore関数（redux-store.jsで必要）\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunMiddleware));\n}","map":{"version":3,"sources":["/Users/takahashikouta/MyReact/next_app/store.js"],"names":["createStore","applyMiddleware","thunMiddleware","initial","message","const","counterReducer","state","action","type","count","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,cAAP,MAA2B,aAA3B,C,CAGA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAC,OADM;AAEdC,EAAAA,KAAK,EAAC;AAFQ,CAAhB,C,CAMA;;AACA,SAASC,cAAT,CAAyBC,KAAK,GAAGJ,OAAjC,EAA0CK,MAA1C,EAAkD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AACLL,QAAAA,OAAO,EAAE,WADJ;AAELM,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO;AACLN,QAAAA,OAAO,EAAE,WADJ;AAELM,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAa;AAFf,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACLN,QAAAA,OAAO,EAAE,OADJ;AAELM,QAAAA,KAAK,EAAEP,OAAO,CAACO;AAFV,OAAP;;AAIF;AACE,aAAOH,KAAP;AAjBJ;AAmBD,C,CAGD;;;AACA,OAAO,SAASI,SAAT,CAAmBJ,KAAK,GAAGJ,OAA3B,EAAoC;AACzC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAChBN,eAAe,CAACC,cAAD,CADC,CAAlB;AAED","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunMiddleware from 'redux-thunk';\n\n\n// ステートの初期値\nconst initial = {\n  message:'START',\n  const:0\n}\n\n\n// レデューサー\nfunction counterReducer (state = initial, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        message: 'INCREMENT',\n        count: state.count + 1\n      };\n    case 'DECREMENT':\n      return {\n        message: 'DECREMENT',\n        count: state.count -1\n      };\n    case 'RESET':\n      return {\n        message: 'RESET',\n        count: initial.count\n      };\n    default:\n      return state;\n  }\n}\n\n\n// initStore関数（redux-store.jsで必要）\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state,\n    applyMiddleware(thunMiddleware))\n}\n\n"]},"metadata":{},"sourceType":"module"}