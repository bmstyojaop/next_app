{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\"; // Firebaseの初期化\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBkdY07fzi90iLUnnBI0SOnyMbI-TYACeM\",\n  authDomain: \"ktnoreact.firebaseapp.com\",\n  databaseURL: \"https://ktnoreact.firebaseio.com\",\n  projectId: \"ktnoreact\",\n  storageBucket: \"ktnoreact.appspot.com\",\n  messagingSenderId: \"511415959629\",\n  appId: \"1:511415959629:web:77b84577b1f8c09e745c04\",\n  measurementId: \"G-2YXEJ8MPST\"\n};\nvar fireapp;\n\ntry {\n  firebase.initializeApp(firebaseConfig); // firebase.analytics();\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nconst initial = {}; // レデューサー（ダミー）\n\nfunction fireReducer(state = initial, action) {\n  switch (action.type) {\n    // ダミー\n    case 'TESTACTION':\n      return state;\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/takahashikouta/MyReact/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initializeApp","error","console","log","message","initial","fireReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,2BAFO;AAGnBC,EAAAA,WAAW,EAAE,kCAHM;AAInBC,EAAAA,SAAS,EAAE,WAJQ;AAKnBC,EAAAA,aAAa,EAAE,uBALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;AAWA,IAAIC,OAAJ;;AACA,IAAI;AACFV,EAAAA,QAAQ,CAACW,aAAT,CAAuBV,cAAvB,EADE,CAEF;AACD,CAHD,CAGE,OAAOW,KAAP,EAAc;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;;AACD,eAAeL,OAAf,C,CAEA;;AACA,MAAMM,OAAO,GAAG,EAAhB,C,CAGA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGF,OAA7B,EAAsCG,MAAtC,EAA8C;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,YAAL;AACE,aAAOF,KAAP;AACF;;AACA;AACE,aAAOA,KAAP;AANJ;AAQD,C,CAED;;;AACA,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGF,OAA3B,EAAoC;AACzC,SAAOnB,WAAW,CAACoB,WAAD,EAAcC,KAAd,EAChBpB,eAAe,CAACC,eAAD,CADC,CAAlB;AAED","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport firebase from \"firebase\";\n\n// Firebaseの初期化\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBkdY07fzi90iLUnnBI0SOnyMbI-TYACeM\",\n  authDomain: \"ktnoreact.firebaseapp.com\",\n  databaseURL: \"https://ktnoreact.firebaseio.com\",\n  projectId: \"ktnoreact\",\n  storageBucket: \"ktnoreact.appspot.com\",\n  messagingSenderId: \"511415959629\",\n  appId: \"1:511415959629:web:77b84577b1f8c09e745c04\",\n  measurementId: \"G-2YXEJ8MPST\"\n};\n\nvar fireapp;\ntry {\n  firebase.initializeApp(firebaseConfig)\n  // firebase.analytics();\n} catch (error) {\n  console.log(error.message);\n}\nexport default fireapp;\n\n// ステート初期値\nconst initial = {\n}\n\n// レデューサー（ダミー）\nfunction fireReducer(state = initial, action) {\n  switch (action.type) {\n    // ダミー\n    case 'TESTACTION':\n      return state;\n    // デフォルト\n    default:\n      return state;\n  }\n}\n\n// initStore関数\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state, \n    applyMiddleware(thunkMiddleware))\n}\n\n\n"]},"metadata":{},"sourceType":"module"}