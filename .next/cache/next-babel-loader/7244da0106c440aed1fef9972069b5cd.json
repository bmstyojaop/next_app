{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // ステート初期化\n\nconst initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n}; // レデューサー\n\nfunction calcReducer(state = initial, action) {\n  switch (action.type) {\n    // 計算実行\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g, \"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n      let result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n    // リセット\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n    // デフォルト\n\n    default:\n      return state;\n  }\n}\n\ninitStore関数;\nexport function initStore(state = initial) {\n  return createStore(calcReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/takahashikouta/MyReact/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","calcReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore関数","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAGA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAC,OADM;AAEdC,EAAAA,IAAI,EAAC,EAFS;AAGdC,EAAAA,MAAM,EAAC,EAHO;AAIdC,EAAAA,MAAM,EAAC;AAJO,CAAhB,C,CAQA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGN,OAA7B,EAAsCO,MAAtC,EAA8C;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,OAAL;AACE,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAoB,EAApB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AACA,UAAIV,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBU,GAAG,GAAG,CAAzC;AACA,aAAO;AACLb,QAAAA,OAAO,EAAC,OADH;AAELC,QAAAA,IAAI,EAACO,KAFA;AAGLN,QAAAA,MAAM,EAACa,OAHF;AAILZ,QAAAA,MAAM,EAACA;AAJF,OAAP;AAMF;;AACA,SAAK,OAAL;AACE,aAAO;AACLH,QAAAA,OAAO,EAAC,OADH;AAELC,QAAAA,IAAI,EAAC,EAFA;AAGLC,QAAAA,MAAM,EAAC,EAHF;AAILC,QAAAA,MAAM,EAAC;AAJF,OAAP;AAMF;;AACA;AACE,aAAOE,KAAP;AA1BJ;AA4BD;;AAEDW,WAAW;AACX,OAAO,SAASC,SAAT,CAAmBZ,KAAK,GAAGN,OAA3B,EAAoC;AACzC,SAAOH,WAAW,CAACQ,WAAD,EAAcC,KAAd,EAChBR,eAAe,CAACC,eAAD,CADC,CAAlB;AAED","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\n\n// ステート初期化\nconst initial = {\n  message:'START',\n  data:[],\n  number:[],\n  result:0\n}\n\n\n// レデューサー\nfunction calcReducer(state = initial, action) {\n  switch (action.type) {\n    // 計算実行\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g,\"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n      let result = (state.result * 1) + (num * 1);\n      return {\n        message:'ENTER',\n        data:data2,\n        number:number2,\n        result:result\n      };\n    // リセット\n    case 'RESET':\n      return {\n        message:'RESET',\n        data:[],\n        number:[],\n        result:0\n      };\n    // デフォルト\n    default:\n      return state;\n  }\n}\n\ninitStore関数\nexport function initStore(state = initial) {\n  return createStore(calcReducer, state,\n    applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}