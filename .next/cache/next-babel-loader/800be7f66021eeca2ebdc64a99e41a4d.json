{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/takahashikouta/MyReact/next_app/components/Firefind.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport Link from 'next/link';\n\nvar Firefind = /*#__PURE__*/function (_Component) {\n  _inherits(Firefind, _Component);\n\n  var _super = _createSuper(Firefind);\n\n  // 初期化。ステートとイベント用メソッドの設定\n  function Firefind(props) {\n    var _this;\n\n    _classCallCheck(this, Firefind);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      borderBottom: \"1px solid gray\"\n    });\n\n    _this.state = {\n      input: '',\n      data: []\n    };\n    _this.doChange = _this.doChange.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } // 入力フィールドに入力時の処理\n\n\n  _createClass(Firefind, [{\n    key: \"doChange\",\n    value: function doChange(e) {\n      this.setState({\n        input: e.target.value\n      });\n    } // ボタンクリック時の処理\n\n  }, {\n    key: \"doAction\",\n    value: function doAction(e) {\n      this.findFireData(this.state.input);\n    } // 検索の実行\n\n  }, {\n    key: \"findFireData\",\n    value: function findFireData(s) {\n      var db = firebase.database();\n      var ref = db.ref('Sample/');\n      var self = this;\n      ref.orderByKey().equalTo(s).on('value', function (snapshot) {\n        self.setState({\n          data: snapshot.val()\n        });\n      });\n    } // テーブルの内容の作成\n\n  }, {\n    key: \"getTableData\",\n    value: function getTableData() {\n      var result = [];\n\n      if (this.state.data == null || this.state.data.length == 0) {\n        return [__jsx(\"tr\", {\n          key: \"0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        }, __jsx(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 27\n          }\n        }, \"NO DATA.\"))];\n      }\n\n      for (var i in this.state.data) {\n        result.push(__jsx(\"tr\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }, __jsx(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, this.state.data[i].ID), __jsx(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }, this.state.data[i].name), __jsx(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }\n        }, this.state.data[i].message)));\n      }\n\n      return result;\n    } // レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        onChange: this.doChange,\n        style: this.style,\n        value: this.state.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), __jsx(\"button\", {\n        onClick: this.doAction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, \"Find\"), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }), __jsx(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }\n      }, this.getTableData())), __jsx(Link, {\n        href: \"./Fireadd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"Fireadd\"));\n    }\n  }]);\n\n  return Firefind;\n}(Component);\n\nexport default Firefind;","map":{"version":3,"sources":["/Users/takahashikouta/MyReact/next_app/components/Firefind.js"],"names":["React","Component","firebase","Link","Firefind","props","borderBottom","state","input","data","doChange","bind","doAction","e","setState","target","value","findFireData","s","db","database","ref","self","orderByKey","equalTo","on","snapshot","val","result","length","i","push","ID","name","message","style","getTableData"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport Link from 'next/link';\n\n\nclass Firefind extends Component {\n  style = {\n    borderBottom:\"1px solid gray\"\n  }\n\n\n  // 初期化。ステートとイベント用メソッドの設定\n  constructor(props) {\n    super(props);\n    this.state = {\n      input:'',\n      data:[]\n    }\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n\n  // 入力フィールドに入力時の処理\n  doChange(e){\n    this.setState({\n      input:e.target.value\n    })\n  }\n\n\n  // ボタンクリック時の処理\n  doAction(e){\n    this.findFireData(this.state.input);\n  }\n\n  // 検索の実行\n  findFireData(s){\n    let db = firebase.database();\n    let ref = db.ref('Sample/');\n    let self = this;\n    ref.orderByKey()\n      .equalTo(s)\n      .on('value', (snapshot)=>{\n        self.setState({\n          data:snapshot.val()\n        });\n      });\n  }\n\n\n  // テーブルの内容の作成\n  getTableData(){\n    let result = [];\n    if (this.state.data == null || this.state.data.length == 0){\n      return [<tr key=\"0\"><th>NO DATA.</th></tr>];\n    }\n    for(let i in this.state.data){\n      result.push(\n        <tr key={i}>\n          <th>{this.state.data[i].ID}</th>\n          <td>{this.state.data[i].name}</td>\n          <td>{this.state.data[i].message}</td>\n        </tr>\n      );\n    }\n    return result;\n  }\n\n\n  // レンダリング\n  render(){\n    return (\n      <div>\n        <input type=\"text\" onChange={this.doChange}\n          style={this.style} value={this.state.input} />\n        <button onClick={this.doAction}>Find</button>\n        <hr />\n        <table><tbody>\n          {this.getTableData()}\n        </tbody></table>\n        <Link href=\"./Fireadd\">\n          Fireadd\n        </Link>\n      </div>\n    )\n  }\n}\n\n\nexport default Firefind;"]},"metadata":{},"sourceType":"module"}