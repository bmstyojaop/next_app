{"ast":null,"code":"var _jsxFileName = \"/Users/takahashikouta/MyReact/next_app/components/Firefind.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\n\nclass Firefind extends Component {\n  // 初期化。ステートとイベント用メソッドの設定\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      borderBottom: \"1px solid gray\"\n    });\n\n    _defineProperty(this, \"\\u30C6\\u30FC\\u30D6\\u30EB\\u306E\\u5185\\u5BB9\\u306E\\u4F5C\\u6210\", void 0);\n\n    this.state = {\n      input: '',\n      data: []\n    };\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } // 入力フィールドに入力時の処理\n\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  } // ボタンクリック時の処理\n\n\n  doAction(e) {\n    this.findFireData(this.state.input);\n  } // 検索の実行\n\n\n  findFireData(s) {\n    let db = firebase.database();\n    let ref = db.ref('Sample/');\n    let self = this;\n    ref.orderByKey().equalTo(s).on('value', snapshot => {\n      self.setState({\n        data: snapshot.val()\n      });\n    });\n  }\n\n  getTableData() {\n    let result = [];\n\n    if (this.state.data == nul || this.state.data.length == 0) {\n      return [__jsx(\"tr\", {\n        key: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }\n      }, \"NO DATA.\"))];\n    }\n\n    for (let i in this.state.data) {\n      result.push(__jsx(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, this.state.data[i].ID), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, this.state.data[i].name), __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, this.state.data[i].message)));\n    }\n\n    return result;\n  } // レンダリング\n\n\n  rebder() {\n    __jsx(\"input\", {\n      type: \"text\",\n      onChange: this.doChange,\n      style: this.style,\n      value: (this.state, input),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/takahashikouta/MyReact/next_app/components/Firefind.js"],"names":["React","Component","firebase","Firefind","constructor","props","borderBottom","state","input","data","doChange","bind","doAction","e","setState","target","value","findFireData","s","db","database","ref","self","orderByKey","equalTo","on","snapshot","val","getTableData","result","nul","length","i","push","ID","name","message","rebder","style"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\n\n\nclass Firefind extends Component {\n  style = {\n    borderBottom:\"1px solid gray\"\n  }\n\n  // 初期化。ステートとイベント用メソッドの設定\n  constructor(props) {\n    super(props);\n    this.state = {\n      input:'',\n      data:[]\n    }\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  // 入力フィールドに入力時の処理\n  doChange(e){\n    this.setState({\n      input:e.target.value\n    })\n  }\n\n  // ボタンクリック時の処理\n  doAction(e){\n    this.findFireData(this.state.input);\n  }\n\n  // 検索の実行\n  findFireData(s){\n    let db = firebase.database();\n    let ref = db.ref('Sample/');\n    let self = this;\n    ref.orderByKey()\n      .equalTo(s)\n      .on('value', (snapshot)=>{\n        self.setState({\n          data:snapshot.val()\n        });\n      });\n  }\n\n  テーブルの内容の作成\n  getTableData(){\n    let result = [];\n    if (this.state.data == nul || this.state.data.length == 0){\n      return [<tr key=\"0\"><th>NO DATA.</th></tr>];\n    }\n    for(let i in this.state.data){\n      result.push(\n        <tr key={i}>\n          <th>{this.state.data[i].ID}</th>\n          <th>{this.state.data[i].name}</th>\n          <th>{this.state.data[i].message}</th>\n        </tr>\n      );\n    }\n    return result;\n  }\n\n\n  // レンダリング\n  rebder(){\n    <input type=\"text\" onChange={this.doChange}\n      style={this.style} value={this.state,input} />\n  \n  }\n}"]},"metadata":{},"sourceType":"module"}